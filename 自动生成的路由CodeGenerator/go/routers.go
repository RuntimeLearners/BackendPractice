/*
 * JHEntryTrial
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the DefaultApi part of the API
	DefaultApi DefaultApi
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"ApiAdminUsersGet",
			http.MethodGet,
			"/api/admin/users",
			handleFunctions.DefaultApi.ApiAdminUsersGet,
		},
		{
			"ApiAdminUsersIdDelete",
			http.MethodDelete,
			"/api/admin/users/:id",
			handleFunctions.DefaultApi.ApiAdminUsersIdDelete,
		},
		{
			"ApiAdminUsersIdPermissionGet",
			http.MethodGet,
			"/api/admin/users/:id/permission",
			handleFunctions.DefaultApi.ApiAdminUsersIdPermissionGet,
		},
		{
			"ApiAdminUsersIdPermissionPut",
			http.MethodPut,
			"/api/admin/users/:id/permission",
			handleFunctions.DefaultApi.ApiAdminUsersIdPermissionPut,
		},
		{
			"ApiAdminUsersIdPut",
			http.MethodPut,
			"/api/admin/users/:id",
			handleFunctions.DefaultApi.ApiAdminUsersIdPut,
		},
		{
			"ApiAdminUsersPost",
			http.MethodPost,
			"/api/admin/users",
			handleFunctions.DefaultApi.ApiAdminUsersPost,
		},
		{
			"ApiAuthLoginPost",
			http.MethodPost,
			"/api/auth/login",
			handleFunctions.DefaultApi.ApiAuthLoginPost,
		},
		{
			"ApiAuthRegisterPost",
			http.MethodPost,
			"/api/auth/register",
			handleFunctions.DefaultApi.ApiAuthRegisterPost,
		},
		{
			"ApiFeedbackAdminGet",
			http.MethodGet,
			"/api/feedback/admin",
			handleFunctions.DefaultApi.ApiFeedbackAdminGet,
		},
		{
			"ApiFeedbackGet",
			http.MethodGet,
			"/api/feedback",
			handleFunctions.DefaultApi.ApiFeedbackGet,
		},
		{
			"ApiFeedbackIdAcceptPut",
			http.MethodPut,
			"/api/feedback/:id/accept",
			handleFunctions.DefaultApi.ApiFeedbackIdAcceptPut,
		},
		{
			"ApiFeedbackIdEvaluatePost",
			http.MethodPost,
			"/api/feedback/:id/evaluate",
			handleFunctions.DefaultApi.ApiFeedbackIdEvaluatePost,
		},
		{
			"ApiFeedbackIdGet",
			http.MethodGet,
			"/api/feedback/:id",
			handleFunctions.DefaultApi.ApiFeedbackIdGet,
		},
		{
			"ApiFeedbackIdMarkSpamPost",
			http.MethodPost,
			"/api/feedback/:id/mark-spam",
			handleFunctions.DefaultApi.ApiFeedbackIdMarkSpamPost,
		},
		{
			"ApiFeedbackIdReplyPost",
			http.MethodPost,
			"/api/feedback/:id/reply",
			handleFunctions.DefaultApi.ApiFeedbackIdReplyPost,
		},
		{
			"ApiFeedbackPost",
			http.MethodPost,
			"/api/feedback",
			handleFunctions.DefaultApi.ApiFeedbackPost,
		},
		{
			"ApiFeedbackSpamPendingGet",
			http.MethodGet,
			"/api/feedback/spam/pending",
			handleFunctions.DefaultApi.ApiFeedbackSpamPendingGet,
		},
		{
			"ApiFeedbackSpamReviewPost",
			http.MethodPost,
			"/api/feedback/spam/review",
			handleFunctions.DefaultApi.ApiFeedbackSpamReviewPost,
		},
		{
			"ApiReplyTemplatesDelete",
			http.MethodDelete,
			"/api/reply-templates",
			handleFunctions.DefaultApi.ApiReplyTemplatesDelete,
		},
		{
			"ApiReplyTemplatesGet",
			http.MethodGet,
			"/api/reply-templates",
			handleFunctions.DefaultApi.ApiReplyTemplatesGet,
		},
		{
			"ApiReplyTemplatesPost",
			http.MethodPost,
			"/api/reply-templates",
			handleFunctions.DefaultApi.ApiReplyTemplatesPost,
		},
		{
			"ApiReplyTemplatesPut",
			http.MethodPut,
			"/api/reply-templates",
			handleFunctions.DefaultApi.ApiReplyTemplatesPut,
		},
		{
			"ApiStatisticsFeedbackGet",
			http.MethodGet,
			"/api/statistics/feedback",
			handleFunctions.DefaultApi.ApiStatisticsFeedbackGet,
		},
		{
			"ApiUploadImagePost",
			http.MethodPost,
			"/api/upload/image",
			handleFunctions.DefaultApi.ApiUploadImagePost,
		},
		{
			"ApiUserInfoGet",
			http.MethodGet,
			"/api/user/info",
			handleFunctions.DefaultApi.ApiUserInfoGet,
		},
		{
			"ApiUserInfoPut",
			http.MethodPut,
			"/api/user/info",
			handleFunctions.DefaultApi.ApiUserInfoPut,
		},
	}
}
