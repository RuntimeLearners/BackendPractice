共同要求：
1. 前端使用 Vue 全家桶，使用 Route 进行路由管理，TypeScript 进行类型规范，配置路由守卫。
2. 后端可依照组内情况自行选择 Go/Java 技术栈，要求有全局错误捕获（Java）/业务异常统一响应中间件（Go），使用统一错误码（一个 code 对应一个 msg）
3. 登陆与注册功能，前端要现登录状态持久化，后端要求使用常见的鉴权方式。
4. 使用 Git 进行版本管理和项目协作，使用 Github 进行代码托管，采用合理、规范的目录结构，使用易读、标准的变量命名形式(最后会根据github提交记录看贡献度)
5. Git 提交记录遵循规范（https://ctbloge.github.io/blog/git/git-commit.html）
6. 完成前后端联调，可以用网页展示项目的全部效果


学生服务平台

应用场景：
学生发现校园内有需要反馈的情况（比如路灯坏了，空调保修等等），可以在该平台进行反馈。提交反馈信息，管理员看到反馈信息后进行处理，并且回复该条反馈；学生可以对管理员的处理进行反馈评价。

基础要求：
1. 能够编辑自己的个人信息（包括基本信息以及联系方式（必填邮箱））
2.可以提交问题反馈，可包含图片信息。（记录页面有反馈记录ID、反馈标题、反馈时间、反馈问题类别、是否紧急、是否匿名、反馈问题内容、反馈问题回复、反馈问题评价）。
3.包含管理员页面，有普通管理员和超级管理员，超级管理员增删改查普通用户和普通管理员账号，所有管理员可以查看所有反馈记录
4.所有管理员可对反馈记录接单（即接下该条记录并负责对其进行处理，一条记录仅可接单一次，管理员可以撤销接单），并回复反馈记录。
5.可以将反馈记录标记为“垃圾信息”，该标记需要经过“超级管理员”审核通过才能生效，生效后将不计入评价情况统计，并自动回复用户 "请您在提交反馈时确保内容的有效性和准确性，感谢您的理解和配合。如有异议，请重新反馈。"；
6. 用户上传的图片只能在后端存储，不借助外部图床服务


提高要求 
1. 帖子处理完成可通过邮箱邮件提醒反馈者
2. 管理员可以预设回复反馈的语句
3. 前后端成功部署到云端服务器，可以公网访问网站服务
4. 超级管理员界面提供可视化大屏
5. 后端实现相同图片去重存储